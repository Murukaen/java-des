/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ro.uoradea.ieti.sd;

import java.io.UnsupportedEncodingException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.util.Base64;
import java.util.HexFormat;

import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.KeyGenerator;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;

public class App {

    private static final String ENCRYPTION_ALGO = "DES";

    private static String bytesToHex(byte[] bytes) {
        return HexFormat.of().formatHex(bytes);
    }

    public static String encrypt(SecretKey key, String msg) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, UnsupportedEncodingException, IllegalBlockSizeException, BadPaddingException {
        Cipher encryptionCipher = Cipher.getInstance(ENCRYPTION_ALGO);
        encryptionCipher.init(Cipher.ENCRYPT_MODE, key);
        byte[] utf8Bytes = msg.getBytes("UTF8");
        byte[] encrypted = encryptionCipher.doFinal(utf8Bytes);
        encrypted = Base64.getEncoder().encode(encrypted);
        return new String(encrypted);
    }

    public static String decrypt(SecretKey key, String encryptedMsg) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, IllegalBlockSizeException, BadPaddingException, UnsupportedEncodingException {
        Cipher decryptionCipher = Cipher.getInstance(ENCRYPTION_ALGO);    
        decryptionCipher.init(Cipher.DECRYPT_MODE, key);
        byte[] decodedEncrypted = Base64.getDecoder().decode(encryptedMsg);
        byte[] decryptedBytes = decryptionCipher.doFinal(decodedEncrypted);
        return new String(decryptedBytes, "UTF8");
    }

    public static SecretKey generateKey() throws NoSuchAlgorithmException {
        return KeyGenerator.getInstance(ENCRYPTION_ALGO).generateKey();
    }

    public static void main(String[] args) {
        try {
            SecretKey key = generateKey();
            String encrypted = encrypt(key, "abcdef");
            System.out.println(String.format("Encrypted msg (Base64): %s", encrypted));
        } catch (NoSuchAlgorithmException e) {
            System.out.println(String.format("Error: Encryption algo %s not found.", ENCRYPTION_ALGO));
            System.exit(1);
        } catch (NoSuchPaddingException | InvalidKeyException e) {
            System.out.println(String.format("Error: Could not creat cipher."));
            System.exit(1);
        } catch (UnsupportedEncodingException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
            System.exit(1);
        } catch (IllegalBlockSizeException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
            System.exit(1);
        } catch (BadPaddingException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
            System.exit(1);
        }

        
    }
}
